const {ethers} = require("hardhat");
const {expect} = require("chai");
const {loadFixture} = require("@nomicfoundation/hardhat-network-helpers");


describe("MAPO ServiceRelayV3 start test", () =>{
    let owner;
    let addr1;

    let relay;
    let lightNode;
    let wrapped;
    let echo;
    let feeService;

    async function deployContractFixture() {
        [owner, addr1] = await ethers.getSigners();

        let relayContract = await ethers.getContractFactory("MapoServiceRelayV3");
        relay = await relayContract.deploy();
        console.log("mosMessageRelay address:",relay.address);

        let wrappedContract = await ethers.getContractFactory("Wrapped");
        wrapped = await wrappedContract.deploy();
        console.log("Relay Wrapped:",wrapped.address);

        let lightNodeContract = await ethers.getContractFactory("LightClientManager");
        lightNode = await  lightNodeContract.deploy();
        console.log("LightClientManager:",lightNode.address);

        let EchoContract = await ethers.getContractFactory("Echo");
        echo = await  EchoContract.deploy();
        console.log("echo relay address:",echo.address)

        let data  = await relay.initialize(wrapped.address,lightNode.address);

        let proxyContract = await ethers.getContractFactory("MapoServiceProxyV3");
        let proxy = await proxyContract.deploy(relay.address,data.data);
        await proxy.deployed()
        relay = relayContract.attach(proxy.address);

        let feeContract = await ethers.getContractFactory("FeeService");
        feeService = await  feeContract.deploy();
        console.log("FeeService Relay address:",feeService.address)

        return {relay,echo,feeService,owner,addr1};
    }

    it('mosMessage set ', async function () {

        let{relay,echo,feeService,owner,addr1} = await loadFixture(deployContractFixture)

        await relay.registerChain(5,"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707","1");

        await relay.addWhiteList(echo.address,true);

        await relay.setFeeService(feeService.address);

        await echo.setWhiteList(relay.address);

        await feeService.setBaseGasLimit(97,1000000);
        await feeService.setChainGasPrice(97,20000);

    });

    it('transferOut start test ', async function () {

        let data = await echo.getData("hello","hello world");

        console.log(echo.address)

        await relay.transferOut("97",[echo.address,data,"5000000","0"],{value:120000000000});

        await expect(relay.transferOut("212",[echo.address,data,"5000000","0"],{value:100})).to.be.revertedWith("Only other chain");


    });

    it('transferIn start test ', async function () {

        expect(await echo.EchoList("hello")).to.equal("");

        let receiptProof = "0xf90320f9031d945fc8d32690cc91d4c39d9d3abcbd16989f875707f863a0f4397fd41454e34a9a4015d05a670124ecd71fe7f1d05578a62f8009b1a57f8aa00000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000000d4b902a0990d2a2ca04d3c48afd73f275a61e9fe79b16c87451862b65592d3a3860e52a6000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000004c4b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014a513E6E4b8f2a923D98304ec87F64353C4D5C85300000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4dd1d382400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

        await relay.transferIn(5,receiptProof);

        expect(await echo.EchoList("hello")).to.equal("hello world");

        //hello -> hello world bsc chain
        let receiptProof97 = "0xf90320f9031d945fc8d32690cc91d4c39d9d3abcbd16989f875707f863a0f4397fd41454e34a9a4015d05a670124ecd71fe7f1d05578a62f8009b1a57f8aa00000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000061b902a0b9194806bb3a7de8846989bcc79d3a12da3ae247a736912fc9b6521591daac87000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014f39fd6e51aad88f6f4ce6ab8827279cfffb9226600000000000000000000000000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000004c4b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014a513E6E4b8f2a923D98304ec87F64353C4D5C85300000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4dd1d382400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001568656c6c6f20776f726c642062736320636861696e000000000000000000000000000000000000000000000000000000000000000000000000000000"

        await relay.transferIn(5,receiptProof97);

        expect(await echo.EchoList("hello")).to.equal("hello world");

    });

})




