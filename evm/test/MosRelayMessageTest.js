const {ethers} = require("hardhat");
const {expect} = require("chai");
const {loadFixture} = require("@nomicfoundation/hardhat-network-helpers");


describe("MAPO ServiceRelayV3 start test", () =>{
    let owner;
    let addr1;

    let relay;
    let lightNode;
    let wrapped;
    let echo;
    let feeService;

    async function deployRelayContractFixture() {
        [owner, addr1] = await ethers.getSigners();

        let relayContract = await ethers.getContractFactory("MapoServiceRelayV3");
        relay = await relayContract.deploy();
        console.log("mosMessageRelay address:",relay.address);

        let wrappedContract = await ethers.getContractFactory("Wrapped");
        wrapped = await wrappedContract.deploy();
        console.log("Relay Wrapped:",wrapped.address);

        let lightNodeContract = await ethers.getContractFactory("LightClientManager");
        lightNode = await  lightNodeContract.deploy();
        console.log("LightClientManager:",lightNode.address);

        let EchoContract = await ethers.getContractFactory("Echo");
        echo = await  EchoContract.deploy();
        console.log("echo relay address:",echo.address)

        let data  = await relay.initialize(wrapped.address,lightNode.address);

        let proxyContract = await ethers.getContractFactory("MapoServiceProxyV3");
        let proxy = await proxyContract.deploy(relay.address,data.data);
        await proxy.deployed()
        relay = relayContract.attach(proxy.address);

        let feeContract = await ethers.getContractFactory("FeeService");
        feeService = await  feeContract.deploy();
        console.log("FeeService Relay address:",feeService.address)

        return {relay,echo,feeService,owner,addr1};
    }

    describe("",() =>{
        it('mosMessage relay set ', async function () {

            let{relay,echo,feeService,owner,addr1} = await loadFixture(deployRelayContractFixture)

            await relay.registerChain(5,"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707","1");

            await relay.addWhiteList(echo.address,true);

            await relay.setFeeService(feeService.address);

            await echo.setWhiteList(relay.address);

            await echo.setMapoService(relay.address);

            await echo.addCorrespondence("0xcf7ed3acca5a467e9e704c703e8d87f634fb0fc9",true);

            await feeService.setBaseGasLimit(97,1000000);
            await feeService.setChainGasPrice(97,"0x0000000000000000000000000000000000000000",20000);

        });

        it('transferOut start test ', async function () {

            let data = await echo.getData("hello","hello world");

            //console.log(echo.address)

            await relay.transferOut("97",["0",echo.address,data,"5000000","0"],"0x0000000000000000000000000000000000000000",{value:120000000000});

            await expect(relay.transferOut("212",["0",echo.address,data,"5000000","0"],"0x0000000000000000000000000000000000000000",{value:100})).to.be.revertedWith("Only other chain");


        });

        it('transferIn start test ', async function () {

            expect(await echo.EchoList("hello")).to.equal("");

            let receiptProof = "0xf90340f9033d945fc8d32690cc91d4c39d9d3abcbd16989f875707f863a0f4397fd41454e34a9a4015d05a670124ecd71fe7f1d05578a62f8009b1a57f8aa00000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000000d4b902c0a08a11473d71a0a6872f1061f7125b9bacaaf48661023d65c088d843ad05cb67000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014cf7ed3acca5a467e9e704c703e8d87f634fb0fc900000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000004c4b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144ed7c70F96B99c776995fB64377f0d4aB3B0e1C100000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4dd1d382400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b68656c6c6f20776f726c6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

            await relay.transferIn(5,receiptProof);

            expect(await echo.EchoList("hello")).to.equal("hello world");

            //hello -> hello world bsc chain
            let receiptProof97 = "0xf90340f9033d945fc8d32690cc91d4c39d9d3abcbd16989f875707f863a0f4397fd41454e34a9a4015d05a670124ecd71fe7f1d05578a62f8009b1a57f8aa00000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000061b902c00c5293d47b8bff29fa6af7f4a2bd708fb71c4d9fb9c40f60bf5a35d34af5bf96000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014cf7ed3acca5a467e9e704c703e8d87f634fb0fc900000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000004c4b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144ed7c70F96B99c776995fB64377f0d4aB3B0e1C100000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4dd1d382400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001568656c6c6f20776f726c642062736320636861696e000000000000000000000000000000000000000000000000000000000000000000000000000000"

            await relay.transferIn(5,receiptProof97);

            expect(await echo.EchoList("hello")).to.equal("hello world");

            let receiptProofMessage = "0xf90320f9031d945fc8d32690cc91d4c39d9d3abcbd16989f875707f863a0f4397fd41454e34a9a4015d05a670124ecd71fe7f1d05578a62f8009b1a57f8aa00000000000000000000000000000000000000000000000000000000000000005a000000000000000000000000000000000000000000000000000000000000000d4b902a078b81df276ef2c" +
                "c330fa9147232a07abd446b44e55882cdf7475625cd5fdba2c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000014f39fd6e51aad88f6f4ce6ab8827279cfffb9" +
                "226600000000000000000000000000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000" +
                "0000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000004c4b40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000144ed7c70f96b99c77" +
                "6995fb64377f0d4ab3b0e1c100000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001368656c6c6f20776f726c64206d65737361676500000000000000000000000000"

            await relay.transferIn(5,receiptProofMessage);

            expect(await echo.EchoList("hello")).to.equal("hello world message");

        });
    })



})




